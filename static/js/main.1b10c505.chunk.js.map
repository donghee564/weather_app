{"version":3,"sources":["components/header/header.module.css","components/weather_item/weather_item.module.css","components/weather_current/weather_current.module.css","components/searched_weather_item/searched_weather_item.module.css","components/searched_weather_list/searched_weather_list.module.css","app.module.css","components/weather_list/weather_list.module.css","components/weather_item/weather_item.jsx","components/weather_list/weather_list.jsx","components/weather_current/weather_current.jsx","components/header/header.jsx","components/searched_weather_item/searched_weather_item.jsx","components/searched_weather_list/searched_weather_list.jsx","video/raindrops-comp.mp4","app.jsx","index.js","service/open-weather.js"],"names":["module","exports","WeatherItem","weather","unit","minCels","Math","round","temp","min","minFah","maxCels","max","maxFah","date","Date","day","dt","setTime","className","styles","moment","format","icon","src","alt","main","rain","snow","memo","WeatherList","weathersList","weatherList","map","WeatherCurrent","currentWeather","cels","fah","feelsLikecels","feels_like","feelsLikefah","weatherCurrent","weatherIcon","description","details","listIcon","wind_speed","visibility","humidity","pressure","Header","timezone","current","handleUnitChange","onSearch","inputRef","useRef","handleSearch","value","header","city","currDate","units","radioBtn","input","type","name","id","checked","onChange","checkMark","search","searchInput","onKeyPress","e","key","ref","placeholder","searchIcon","onClick","SearchedWeatherItem","tempCels","tempFah","dt_txt","time","wind","speed","SearchedWeatherList","list","timezoneInMin","wrap","title","country","utcOffset","subTitle","button","App","openWeather","useState","daily","weathers","setWeathers","searchWeather","setSearchWeather","setUnit","useEffect","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lon","longitude","currPosWeather","then","result","splice","console","log","useCallback","query","dailyWeather","filter","item","includes","catch","alert","showSearchedWeather","app","video","loop","autoPlay","muted","Raindrops","event","target","this","getRequestOptions","method","redirect","a","fetch","response","json","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b10c505.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3XUAL\",\"city\":\"header_city__Z7AtS\",\"currDate\":\"header_currDate__31f3X\",\"units\":\"header_units__2J46W\",\"radioBtn\":\"header_radioBtn__Ikj1Y\",\"input\":\"header_input__2J4_K\",\"checkMark\":\"header_checkMark__-Rr25\",\"search\":\"header_search__2wFLu\",\"searchInput\":\"header_searchInput__2hSED\",\"searchIcon\":\"header_searchIcon__1KJAE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"weather_item_weather__2KXMh\",\"day\":\"weather_item_day__2Bl18\",\"date\":\"weather_item_date__7qOH-\",\"temp\":\"weather_item_temp__2C-K2\",\"main\":\"weather_item_main__aRRbB\",\"rain\":\"weather_item_rain__3RiMe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherCurrent\":\"weather_current_weatherCurrent__1qHCI\",\"weatherIcon\":\"weather_current_weatherIcon__2doGT\",\"icon\":\"weather_current_icon__HJo8k\",\"temp\":\"weather_current_temp__1eBaw\",\"details\":\"weather_current_details__29Mrl\",\"listIcon\":\"weather_current_listIcon__32OOh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"searched_weather_item_weather__1SSTG\",\"day\":\"searched_weather_item_day__1LR9O\",\"date\":\"searched_weather_item_date__2g5PA\",\"time\":\"searched_weather_item_time__-0Brp\",\"temp\":\"searched_weather_item_temp__2Uvdg\",\"main\":\"searched_weather_item_main__l6KY9\",\"rain\":\"searched_weather_item_rain__1TeZz\",\"details\":\"searched_weather_item_details__2kx4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"searched_weather_list_wrap__3SFuT\",\"title\":\"searched_weather_list_title__2kIPf\",\"date\":\"searched_weather_list_date__1AMDN\",\"weatherList\":\"searched_weather_list_weatherList__1L9bX\",\"subTitle\":\"searched_weather_list_subTitle__A1Jzl\",\"button\":\"searched_weather_list_button__3QHW5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3nZWQ\",\"weather\":\"app_weather__12dt7\",\"video\":\"app_video__1kzjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherList\":\"weather_list_weatherList__JTWdQ\"};","import moment from \"moment\";\r\nimport React, { memo } from \"react\";\r\nimport styles from \"./weather_item.module.css\";\r\n\r\nconst WeatherItem = ({ weather, unit }) => {\r\n  const minCels = Math.round(weather.temp.min);\r\n  const minFah = Math.round((minCels * 9) / 5 + 32);\r\n  const maxCels = Math.round(weather.temp.max);\r\n  const maxFah = Math.round((maxCels * 9) / 5 + 32);\r\n\r\n  // moment를 이용한 dt data 변환\r\n  let date = new Date();\r\n  const day = weather.dt * 1000;\r\n  date.setTime(day);\r\n\r\n  return (\r\n    <li className={styles.weather}>\r\n      <p className={styles.day}>{moment(date).format(\"dddd\")}</p>\r\n      <p className={styles.date}>{moment(date).format(\"MMM Do\")}</p>\r\n      <p className={styles.temp}>\r\n        <span>Min</span> {unit === \"celsius\" ? minCels + \"°C\" : minFah + \"°F\"}\r\n      </p>\r\n      <p className={styles.temp}>\r\n        <span>Max</span> {unit === \"celsius\" ? maxCels + \"°C\" : maxFah + \"°F\"}\r\n      </p>\r\n      <img\r\n        className={styles.icon}\r\n        src={`https://www.openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n        alt={weather.weather[0].icon}\r\n      />\r\n      <p className={styles.main}>{weather.weather[0].main}</p>\r\n      {weather.rain && <p className={styles.rain}>{weather.rain}mm</p>}\r\n      {weather.snow && <p className={styles.rain}>{weather.snow}mm</p>}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(WeatherItem);\r\n","import React, { memo } from \"react\";\r\nimport WeatherItem from \"../weather_item/weather_item\";\r\nimport styles from \"./weather_list.module.css\";\r\n\r\nconst WeatherList = ({ weathersList, unit }) => (\r\n  <ul className={styles.weatherList}>\r\n    {weathersList.map((weather) => (\r\n      <WeatherItem weather={weather} key={weather.dt} unit={unit} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default memo(WeatherList);\r\n","import styles from \"./weather_current.module.css\";\r\nimport { Wind } from \"react-bootstrap-icons\";\r\nimport { Moisture } from \"react-bootstrap-icons\";\r\nimport { Eye } from \"react-bootstrap-icons\";\r\nimport { ThermometerHalf } from \"react-bootstrap-icons\";\r\n\r\nconst WeatherCurrent = ({ unit, weather, currentWeather }) => {\r\n  const cels = Math.round(weather.temp);\r\n  const fah = Math.round((cels * 9) / 5 + 32);\r\n  const feelsLikecels = Math.round(weather.feels_like);\r\n  const feelsLikefah = Math.round((cels * 9) / 5 + 32);\r\n\r\n  return (\r\n    <section className={styles.weatherCurrent}>\r\n      <div className={styles.weatherIcon}>\r\n        <img\r\n          className={styles.icon}\r\n          src={`https://www.openweathermap.org/img/wn/${currentWeather.icon}@2x.png`}\r\n          alt=\"\"\r\n        />\r\n        <p>{currentWeather.description}</p>\r\n      </div>\r\n      <div className={styles.temp}>\r\n        <h1>\r\n          {unit === \"celsius\" ? cels : fah}\r\n          {unit === \"celsius\" ? <span>°C</span> : <span>°F</span>}\r\n        </h1>\r\n        <p>Feels like {unit === \"celsius\" ? feelsLikecels : feelsLikefah}°</p>\r\n      </div>\r\n      <div className={styles.details}>\r\n        {/* <h3>MORE DETAILS</h3> */}\r\n        <ul>\r\n          <li>\r\n            <span className={styles.listIcon}>\r\n              <Wind />\r\n            </span>\r\n            <p>Wind {weather.wind_speed}m/s</p>\r\n          </li>\r\n          <li>\r\n            <span className={styles.listIcon}>\r\n              <Eye />\r\n            </span>\r\n            <p>Visibility {weather.visibility * 0.001}km</p>\r\n          </li>\r\n          <li>\r\n            <span className={styles.listIcon}>\r\n              <Moisture />\r\n            </span>\r\n            <p>Humidity {weather.humidity}%</p>\r\n          </li>\r\n          <li>\r\n            <span className={styles.listIcon}>\r\n              <ThermometerHalf />\r\n            </span>\r\n            <p>Pressure {weather.pressure}hPa</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default WeatherCurrent;\r\n","import React, { useRef } from \"react\";\r\nimport styles from \"./header.module.css\";\r\nimport moment from \"moment\";\r\nimport { Search } from \"react-bootstrap-icons\";\r\n\r\nconst Header = ({ unit, timezone, current, handleUnitChange, onSearch }) => {\r\n  let date = new Date();\r\n  const day = current.dt * 1000;\r\n  date.setTime(day);\r\n  const inputRef = useRef();\r\n\r\n  const handleSearch = () => {\r\n    const value = inputRef.current.value;\r\n    onSearch(value);\r\n  };\r\n\r\n  const onKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSearch();\r\n      inputRef.current.value = \"\";\r\n    }\r\n  };\r\n\r\n  const onClick = () => {\r\n    handleSearch();\r\n    inputRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <section className={styles.header}>\r\n      <h2 className={styles.city}>{timezone}</h2>\r\n      <p className={styles.currDate}>\r\n        {moment(date).format(\"dddd\")}, {moment(date).format(\"MMM Do\")}\r\n      </p>\r\n      <ul className={styles.units}>\r\n        <li>\r\n          <label className={styles.radioBtn}>\r\n            <input\r\n              className={styles.input}\r\n              type=\"radio\"\r\n              name=\"degree-unit\"\r\n              id=\"celsius\"\r\n              value=\"celsius\"\r\n              checked={unit === \"celsius\"}\r\n              onChange={handleUnitChange}\r\n            />\r\n            <span className={styles.checkMark}></span>\r\n            °C\r\n          </label>\r\n        </li>\r\n        <li>\r\n          <label className={styles.radioBtn}>\r\n            <input\r\n              className={styles.input}\r\n              type=\"radio\"\r\n              name=\"degree-unit\"\r\n              id=\"fahrenheit\"\r\n              value=\"fahrenheit\"\r\n              checked={unit === \"fahrenheit\"}\r\n              onChange={handleUnitChange}\r\n            />\r\n            <span className={styles.checkMark}></span>\r\n            °F\r\n          </label>\r\n        </li>\r\n      </ul>\r\n      <div className={styles.search}>\r\n        <input\r\n          className={styles.searchInput}\r\n          onKeyPress={onKeyPress}\r\n          ref={inputRef}\r\n          type=\"search\"\r\n          placeholder=\"Search by City Name\"\r\n        />\r\n        <button className={styles.searchIcon} onClick={onClick} type=\"submit\">\r\n          <Search />\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import moment from \"moment\";\r\nimport React, { memo } from \"react\";\r\nimport styles from \"./searched_weather_item.module.css\";\r\n\r\nconst SearchedWeatherItem = ({ weather, unit }) => {\r\n  const tempCels = Math.round(weather.main.temp);\r\n  const tempFah = Math.round((tempCels * 9) / 5 + 32);\r\n\r\n  return (\r\n    <li className={styles.weather}>\r\n      <div>\r\n        <p className={styles.day}>{moment(weather.dt_txt).format(\"dddd\")}</p>\r\n        <p className={styles.date}>{moment(weather.dt_txt).format(\"MMM Do\")}</p>\r\n        <p className={styles.time}>\r\n          {moment(weather.dt_txt).format(\"h:mm:ss a\")}\r\n        </p>\r\n        <p className={styles.temp}>\r\n          <span>Temp</span>{\" \"}\r\n          {unit === \"celsius\" ? tempCels + \"°C\" : tempFah + \"°F\"}\r\n        </p>\r\n        <img\r\n          className={styles.icon}\r\n          src={`https://www.openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n          alt={weather.weather[0].icon}\r\n        />\r\n        <p className={styles.main}>{weather.weather[0].main}</p>\r\n        {/* {weather.rain && <p className={styles.rain}>{weather.rain}mm</p>}\r\n        {weather.snow && <p className={styles.rain}>{weather.snow}mm</p>} */}\r\n      </div>\r\n      <ul className={styles.details}>\r\n        <li>Wind {weather.wind.speed} m/s</li>\r\n        <li>Visibility {weather.visibility * 0.001}km</li>\r\n        <li>Humidity {weather.main.humidity} %</li>\r\n        <li>Pressure {weather.main.pressure} hPa</li>\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(SearchedWeatherItem);\r\n","import React, { memo } from \"react\";\r\nimport moment from \"moment\";\r\nimport SearchedWeatherItem from \"../searched_weather_item/searched_weather_item\";\r\nimport styles from \"./searched_weather_list.module.css\";\r\nimport { X } from \"react-bootstrap-icons\";\r\n\r\nconst SearchedWeatherList = ({ city, list, unit, onClick }) => {\r\n  const timezoneInMin = city.timezone / 60;\r\n\r\n  return (\r\n    <section className={styles.wrap}>\r\n      <h1 className={styles.title}>\r\n        {city.country} / {city.name}\r\n      </h1>\r\n      <p className={styles.date}>\r\n        {moment().utcOffset(timezoneInMin).format(\"dddd\")},{\" \"}\r\n        {moment().utcOffset(timezoneInMin).format(\"MMM Do\")}\r\n      </p>\r\n      <p className={styles.subTitle}>5-Day Forecast</p>\r\n      <ul className={styles.weatherList}>\r\n        {list.map((weather) => (\r\n          <SearchedWeatherItem weather={weather} key={weather.dt} unit={unit} />\r\n        ))}\r\n      </ul>\r\n      <button onClick={onClick} className={styles.button}>\r\n        <X />\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default memo(SearchedWeatherList);\r\n","export default __webpack_public_path__ + \"static/media/raindrops-comp.62375c48.mp4\";","import { useCallback, useEffect, useState } from \"react\";\nimport WeatherList from \"./components/weather_list/weather_list\";\nimport styles from \"./app.module.css\";\nimport WeatherCurrent from \"./components/weather_current/weather_current\";\nimport Header from \"./components/header/header\";\nimport SearchedWeatherList from \"./components/searched_weather_list/searched_weather_list\";\nimport Raindrops from \"./video/raindrops-comp.mp4\";\n\nfunction App({ openWeather }) {\n  const [weathers, setWeathers] = useState({\n    timezone: \"\",\n    current: {},\n    daily: [],\n    currentWeather: {},\n  });\n\n  const [searchWeather, setSearchWeather] = useState({\n    list: [],\n    city: {},\n  });\n\n  const [unit, setUnit] = useState(\"celsius\");\n\n  const handleUnitChange = (event) => {\n    setUnit(event.target.value);\n  };\n\n  useEffect(() => {\n    const getGeoSuccess = (pos) => {\n      const lat = pos.coords.latitude;\n      const lon = pos.coords.longitude;\n      openWeather\n        .currPosWeather(lat, lon) //\n        .then((result) => {\n          setWeathers({\n            timezone: result.timezone,\n            current: result.current,\n            daily: result.daily.splice(1),\n            currentWeather: result.current.weather[0],\n          });\n        });\n    };\n\n    const getGeoError = () => {\n      console.log(\"위치 정보를 찾을수 없습니다.\");\n    };\n\n    navigator.geolocation.getCurrentPosition(getGeoSuccess, getGeoError);\n  }, [openWeather]);\n\n  const handleSearch = useCallback(\n    (query) => {\n      openWeather\n        .searchWeather(query) //\n        .then((result) => {\n          const dailyWeather = result.list.filter((item) =>\n            item.dt_txt.includes(\"18:00:00\")\n          );\n          setSearchWeather({\n            list: dailyWeather,\n            city: result.city,\n          });\n        })\n        .catch(() => alert(\"Please enter a valid city name\"));\n    },\n    [openWeather]\n  );\n\n  const handleClick = () => {\n    setSearchWeather({\n      list: [],\n      city: {},\n    });\n  };\n\n  const showSearchedWeather = searchWeather.city.name && (\n    <SearchedWeatherList\n      onClick={handleClick}\n      city={searchWeather.city}\n      list={searchWeather.list}\n      unit={unit}\n    />\n  );\n\n  return (\n    <div className={styles.app}>\n      <video className={styles.video} loop autoPlay muted>\n        <source src={Raindrops} type=\"video/mp4\" />\n      </video>\n      <section className={styles.weather}>\n        <Header\n          onSearch={handleSearch}\n          handleUnitChange={handleUnitChange}\n          timezone={weathers.timezone}\n          current={weathers.current}\n          unit={unit}\n        />\n        <WeatherCurrent\n          unit={unit}\n          weather={weathers.current}\n          currentWeather={weathers.currentWeather}\n        />\n        <WeatherList unit={unit} weathersList={weathers.daily} />\n        {showSearchedWeather}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport OpenWeather from \"./service/open-weather\";\n\nconst openWeather = new OpenWeather(process.env.REACT_APP_OPENWEATHER_KEY);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App openWeather={openWeather} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","class OpenWeather {\r\n  constructor(key) {\r\n    this.key = key;\r\n    this.getRequestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n    };\r\n  }\r\n\r\n  async currPosWeather(lat, lon) {\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,minutely&appid=${this.key}&units=metric`,\r\n      this.getRequestOptions\r\n    );\r\n    const result = await response.json();\r\n    return result;\r\n  }\r\n\r\n  async searchWeather(query) {\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?q=${query}&appid=${this.key}&units=metric`,\r\n      this.getRequestOptions\r\n    );\r\n    const result = await response.json();\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default OpenWeather;\r\n"],"sourceRoot":""}